on:
  push:
    tags:
      - '*'
jobs:
  build:

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    steps:
      - id: get_version
        uses: battila7/get-version-action@v2
      
      - name: Checkout
        uses: actions/checkout@v4
      
      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64
      
      - name: Set version on AssemblyInfo.cs
        uses: dannevesdantas/set-version-assemblyinfo@v.1.0.0
        with:
          version: ${{ steps.get_version.outputs.version }}
      
      - name: Create the app package
        run: msbuild /p:Configuration=Release /p:Platform=x64
        env:
          PROJECT_VERSION: ${{ steps.get_version.outputs.version }}
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MSIX Package
          path: BypassReplacer\bin\x64\Release\BypassReplacer-${{ steps.get_version.outputs.version }}.exe

  upload:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - id: get_version
        uses: battila7/get-version-action@v2

      - name: Check out repository
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v4
        with:
          name: MSIX Package

      - name: Creating release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Версия ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Uploading release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: BypassReplacer-${{ steps.get_version.outputs.version }}.exe
          asset_name: BypassReplacer-${{ steps.get_version.outputs.version }}.exe
          asset_content_type: application/octet-stream
